TODO:
----------------------
  - Add 'share' division
     - g+
     - facebook
      - I swapped the map and the elevation plot because that was the easy
        way to the the FB like dialog to work. With the map on top, the FB
        dialog would be partially hidden behind the map.
      - This wasn't a problem on the index.html because the map is far
        enough away from the FB like buttion. Could still be a problem
        when the display width gets smaller...
      - still need to workout the URL that get's posted and an image.

      - info on image sizes when posting to social media sites.
      http://www.lunametrics.com/blog/2012/11/12/final-social-media-sizing-cheat-sheet/
      - http:/ogp.me for meta tags to set page informating
      - https://developers.google.com/+/web/snippet/ - for page info
        used by google+
      - https://developers.facebook.com/docs/reference/plugins/like/
          for page info used by facebook
      - www.google.com/webmasters/tools/richsnippets to view what the
        data looks like.

      - https://developers.facebook.com/tools/debug to see the data FB
        will use.

      - Data I need/want:
         - og:title - dynamic
         - og:type - static, map, route, hike, track??
         - og:image - properly pulled on index.html
             - is it too large on the hike.html? Or is there a way to
               specifiy it as a tag?
         - og:url - default might work
         - og:description - dynamic
         - og:site_name - this could be static, RockingDLabs:myHikes

      The problem is that the data can not be supplied by javascript,
      the web sites (FB/Google+) just scan the page header. The way that
      I got an image for the index.html page is that I put a static .jpg
      on the site and set the og:image to point to it. I also hard-coded
      the og:description in the index.html file.

      So the only 'real' solution is to fill in the tags on the server
      side with php or python.

      - this is a clear introduction to HTML5 microdata with some
        examples of how it can be used with 'legacy' HTML:
        http://diveintohtml5.info/extensibility.html

  - Fix display of 'paused' tracks. Right now I am hand editting the
    KML files to comment-out the pause, but it would be better the
    pauses where handled, perhaps as color changes, by the javascript
    that displays the track.

  - Add 'snippet' info so that Google+ links look nice:
     https://developers.google.com/+/plugins/snippet/
     http://schema.org/Map
     http://schema.org/Article
     http://schema.org/Blog

  - Add an announcement and links on RockingDLabs

  - Add a context map so that it is easier to see where the track is
    located.

  - Add an over-view map that shows a marker (with a link?) for each
    track.

  - Add notes to each track and/or rename so they are easier to
    identify.

  - Add a next/previous to make browsing possible.

  - Add multiple lists of hikes: All, walking, hiking, skiing, (other)
    Drop down from Hikes menu

  - Contacts page:
      - links to www.dunmire.org
      - links to rockgdlabs
      - an email address myhikes@dunmire.org (maybe it should be
        mytrails since I have more than hikes in the list)

  - hide description for track in hero unit if it is not available and
    change the size of the map to fill the hero unit

  - I'm not happy with the information in the hero box, the description
    is too detailed and there is too much info. Really need just a
    teaser...

  - put cursor information (elev, dist, etc.) in a floating bubble
    attached to the point on the map.

  - In the track stats area, make elev min and max links that put a
    mark on the map for the high and low points. Or maybe put it in as a
    'Location' link.

  - allow zoom on elevation chart

  - relocate to dunmire.org

  - links to/from RockingdLabs.dunmire.org
  
  - Allow multiple tracks

  - extract more data from the KML file

  - make KML handling specific to the newer MyTracks format
     - add time info:
     - scale distances to match - DONE by python preprocessing
       Multiply each distance by the ratio of the total distance
       calculated divided by the MyTracks reported distance.

  Still need to solve how to organize several hundred hikes, each
  requiring 3 files...
    - by date for sure, need sort and filter option
    - by location would be great
    - some tag that would group the tracks

  Trying to install basemap toolkit for matplotlib.
    See http://www.scipy.org/Cookbook/Matplotlib/Maps
    There are problems due to versions of libgeos, the libgeos-dev
    package can not be installed. So while I think this is a possible
    approach to generating the thumbnails I want, I don't feel like
    pursing it on this old Ubuntu version (10.10).
    
  - add ads
      Moved near the bottom of the list because it would probably better
      to add adds to RockingD Labs first.

  - For narrow (phone) screens, hide the description
  - For medium (tablet) hide description in hero unit
      Initial attempt at hiding columns based on device did not work and
      it may not be a good idea anyway. So I've moved these items to the
      bottom of the todo list for now.


DONE
----------------------
  - Need an index of tracks
     - drop down?
     - separate page?
     - one of the panels? - DONE on home page
     - a thumbnail graphic of the track would be useful - DONE
     - add lat/lon of the start of the track as alt text for the
       thumbnail. Then enable sorting for the thumbnails and use a
       custom sort to sort using lat/lon. - DONE
     - put in 10 rows and then use the table pager

  - tablesorter filter and pager don't work together, so which shall I
    use on the first page? If it is the pager, then perhaps an 'index'
    page should be added that lists all the tracks and uses the filter
    widget.
      - Setup a search/page option, turning on the search option would
        turn off the page option and vis-a-versa - DONE

  - fix hero map- it should also link to the map page. 

  - get latest version of tablesorter
     https://github.com/Mottie/tablesorter

  - fix sorting problem on table load

  - Idea for list display:
      Thumbnail of track, name, distance, date
      Use twitter bootstrap striped and condensed tables with the jQuery
      table sorter and table pager plugins.
      js libraries have been downloaded to myHikes/jquery-tablesorter from
      http://tablesorter.com/docs/

  - Idea for home page:
      Big area at top (forgot what facebook framework calls it) would have
      a small map and the summary from the most recent hike.

      Columns underneath would have a list of other hikes (by date?)

      Get the list of hikes from a php script, perhaps in a JSON format

  - generalize home location and remove marker for privacy reasons.

  - Parse window.location.href to get the track name to load. This makes
    it possible to have one .html file and many track(.kml,.json) files

  - Parse window.locaton.href to decode Permalink arguments.

  - Add license (CC-BY-..) in footer

  - Added attributions in footer

  - add other tile sources, particularly arial tile from Mapquest

  - problem with new version of MyTracks KML file- it uses gx:coord and
    the track therefore does not show up. FIXED: New option to
    addTrackLayer: ttype:
       ttype = linestring : track is in a <LineString> stanza
       ttype = gx:track   : track is in a <gx:Track> stanza

  - For myTracks generated kml, one of the <Placemark> sections includes
    a <description> with a number summary values. Also there is a
    document title. Parse and add the information to the web page.
    Better still, make it an active link and pop-up on the map. Click
    on the marker and a bubble pops up with the Placemark info.
    This is problematic for new MyTracks KML files because the KML
    parser for with the extractTracks setting does not return the
    Placemarks that do not include <gx:track> entries.
    DONE- used python to extract the description into a .txt file.

  - progress bar -DONE

  - get under revision control - DONE, git

  - add link to Credits, which should be on the About page

  - About page:
      - links to the tools, jquery, html5boiler plate, bootstrap, tablesorter,
        myTracks Openstreetmaps, Thunderforest, mapquest, openlayers

      - Explain why this site exists
         this is a way for me to try out modern web site design tools
         I wanted to easily view myTracks and google maps wasn't doing
         it for me.

   - Planning page:
      - links to trail descriptions
      - links to pedometer

  - Get the top-bar navigation links working

  - Need an About page

  - Links to hike planning/trail sites

  - add a last modified date to pages

  - added a type column to the track list

  - get elevations from mapquest
    Done, but mapquest doesn't have quite the resolution of USGS. Speed
    is an improvement, but not blindingly fast. So for now the default
    in myTracksKML2elevChart.py is to use USGS and the roll-over to
    MapQuest (and then to earthtools.com) when USGS elevations are not
    available.

  - add books to about planning page
  - add nav side bar to planning
  - add links to mapping sites, toposm, etc.
  
  - PROBLEM: at least on chrome, when you click on the "Books" nav item,
    the section title gets pushed under the topnav bar.
    The fix is more of a work-around. A top margin is added to the
    section element, but the side effect is that there is 'extra' white
    space between the sections.  I tried some alternatives but they lead
    to other side effects that I didn't want. So I decided to stop
    wasting time and just accept the extra white space.

  - flesh out the book descriptions.
    I decided not to do this- it would have turned into a book review
    and that's not what I want.

  - Add responsive settings to css/style.css - use the docs.css file
    from the bootstrap docs website as an example.
    I have downloaded a copy as bootstrap_docs.css in the
    working/myHikes directory.

  - get scripts under git control
  
  - add new tracks

  - update the featured hike to be the latest
     using symlinks to create Featured.kml, Featured.json, Featured.txt
     and Featured.png. See bin/mkFeatured.sh

  - clean up the track from the last hike (strip the auto section at
      the end). Try using gpsprune

  - merge rowList.html files

  - add install script and/or makefile

  - remove 'space for ads' or add them

  - Choose a better 'Featured' map

  - fixed hero/map problem that kept the table from being viewed on a
    cell phone. Side effect is that if you start with a narrow window
    and then expand, the hero unit appears but map does not.

  - Add Google+ community link on RockingDLabs
  - Change the 'RockingDLabs' link at the top.
  - Add links and a description to the Google+ community
  - Add contact page
  - Add links on www.dunmire.org
